"""
Copyright (c) 2017, Jairus Martin.

Distributed under the terms of the GPL v3 License.

The full license is in the file LICENSE, distributed with this software.

@author: jrm
"""
import re
import sys
from atom.api import Str, Typed
from enaml.core.api import Looper, Conditional
from enaml.core.declarative import d_
from enaml.layout.api import align, hbox, spacer
from enaml.qt.QtGui import QFont
from enaml.qt.QtWidgets import QFontComboBox
from enaml.scintilla.themes import THEMES
from enaml.widgets.api import (
    Dialog, Field, Label, PushButton, Form, ObjectCombo, SplitItem, Splitter,
    Container, SpinBox, FileDialogEx, RawWidget

)
from enamlx.widgets.api import TreeView, TreeViewItem
from micropyde.core.api import log


class FontCombo(RawWidget):
    __slots__ = '__weakref__'

    #: Selected font
    selected = d_(Str())

    #: Widget
    widget = Typed(QFontComboBox)

    def create_widget(self, parent):
        widget = self.widget = QFontComboBox(parent)
        widget.currentFontChanged.connect(self.on_current_font_changed)
        if self.selected:
            self.set_selected(self.selected)
        return widget

    def _observe_selected(self, change):
        self.set_selected(change['value'])

    def set_selected(self, font_family):
        try:
            font = QFont(font_family, 12, 100)
            self.widget.setCurrentFont(font)
        except Exception as e:
            import traceback
            log.error(traceback.print_exc())

    def on_current_font_changed(self, font):
        font_family = font.toString().split(",")[0]
        log.debug(f"Font changed to {font_family}")
        self.selected = font_family



enamldef EditorSettingsPage(Container):
    attr model
    Label:
        text = "Editor"
    Form:
        Label:
            text = "Zoom"
        SpinBox:
            value := model.zoom
            minimum = -10
            maximum = 20
        Label:
            text = "Theme"
        ObjectCombo:
            items = list(THEMES.keys())
            selected := model.theme
        Label:
            text = "Font Size"
        SpinBox:
            value := model.font_size
            minimum = 8
            maximum = 24
        Label:
            text = "Font Family"
        FontCombo:
            selected := model.font_family
    Label:
        text = "Project"
    Form:
        Label:
            text = "Path"
        Label:
            text = ""
        Field:
            text := model.project_path
            tool_tip = "Path where new files will be created"
        PushButton:
            text = "Browse"
            clicked :: FileDialogEx.get_existing_directory(
                self,
                current_path=model.project_path)

    Label:
        text = "Micropython SDK"
    Form:
        Label:
            text = "Board"
        ObjectCombo:
            items = list(model.get_member('upy_board').items)
            selected := model.upy_board
        Label:
            text = "Micropython"
        Label:
            text = ""
        Field:
            text := model.upy_path
            tool_tip = "Path to micropython source to pull modules for code inspection"
        PushButton:
            text = "Browse"
            clicked :: FileDialogEx.get_existing_directory(
                            self,
                            current_path=model.upy_path)
        Label:
            text = "Micropython Modules"
        Label:
            text = ""
        Field:
            text := model.upy_lib_path
            tool_tip = "Path to micropython-lib to pull modules for code inspection"
        PushButton:
            text = "Browse"
            clicked :: FileDialogEx.get_existing_directory(
                            self,
                            current_path=model.upy_lib_path)


