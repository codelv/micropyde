#------------------------------------------------------------------------------
# Copyright (c) 2017 Jairus Martin
#
# Distributed under the terms of the GPL v3 License.
#
# The full license is in the file LICENSE, distributed with this software.
#------------------------------------------------------------------------------
import sys
from enaml.workbench.api import Plugin, Extension, PluginManifest
from enaml.workbench.ui.api import ActionItem, Branding, MenuItem, ItemGroup


def window_factory(workbench):
    """ A factory function which creates the default WorkbenchWindow
    with a reasonable initial size.

    """
    import enaml
    with enaml.imports():
        from enaml.workbench.ui.workbench_window import WorkbenchWindow
    return WorkbenchWindow(initial_size=(960, 540))


def editor_factory(workbench):
    from .workspaces.editor import EditorWorkspace
    space = EditorWorkspace()
    space.window_title = 'Editor'
    return space


class MainPlugin(Plugin):

    def start(self):
        self.init_logging()
        self.workbench.application.deferred_call(self.start_default_workspace)


    def start_default_workspace(self):
        ui = self.workbench.get_plugin('enaml.workbench.ui')
        ui.select_workspace('micropyde.editor')

    def init_logging(self):
        from twisted.python import log
        log.startLogging(sys.stdout)


enamldef Manifest(PluginManifest):
    """ The plugin manifest for the primary example plugin.

    This plugin acts as the entry point for all other plugins in this
    example. It contributes the window branding, default actions, and
    the workspace definitions.

    """
    id = 'micropyde'
    factory = MainPlugin

    Extension:
        id = 'branding'
        point = 'enaml.workbench.ui.branding'
        Branding:
            title = 'Micropython IDE'
    # Extension:
    #     id = 'autostart'
    #     point = 'enaml.workbench.ui.autostart'
    #     plugin_id = 'micropyde'
    Extension:
        id = 'actions'
        point = 'enaml.workbench.ui.actions'
        MenuItem:
            path = '/file'
            label = 'File'
            ItemGroup:
                id = 'user'
            ItemGroup:
                id = 'document'

        ActionItem:
            path = '/file/quit'
            label = 'Quit'
            shortcut = 'Ctrl+Q'
            command = 'enaml.workbench.ui.close_window'

        MenuItem:
            path = '/settings'
            label = 'Settings'
            after = 'file'
            ItemGroup:
                id = 'settings'
        MenuItem:
            path = '/help'
            label = 'Help'
            after = 'settings'
            ItemGroup:
                id = 'help'
        # MenuItem:
        #     path = '/workspace'
        #     label = 'Workspace'
        #     ItemGroup:
        #         id = 'spaces'
        # ActionItem:
        #     path = '/workspace/first'
        #     label = 'First'
        #     shortcut = 'Ctrl+1'
        #     group = 'spaces'
        #     command = 'enaml.workbench.ui.select_workspace'
        #     parameters = {'workspace': 'micropyde.editor'}
        # ActionItem:
        #     path = '/workspace/second'
        #     label = 'Second'
        #     shortcut = 'Ctrl+2'
        #     group = 'spaces'
        #     command = 'enaml.workbench.ui.select_workspace'
        #     parameters = {'workspace': 'sample.second_view'}
        # ActionItem:
        #     path = '/workspace/persistent'
        #     label = 'Persistent'
        #     shortcut = 'Ctrl+3'
        #     group = 'spaces'
        #     command = 'enaml.workbench.ui.select_workspace'
        #     parameters = {'workspace': 'sample.persistent_view'}
        # ActionItem:
        #     path = '/workspace/close'
        #     label = 'Close Workspace'
        #     shortcut = 'Ctrl+D'
        #     command = 'enaml.workbench.ui.close_workspace'
    Extension:
        id = 'micropyde.editor'
        point = 'enaml.workbench.ui.workspaces'
        factory = editor_factory
    Extension:
        id = 'default_window_factory'
        point = 'enaml.workbench.ui.window_factory'
        factory = window_factory